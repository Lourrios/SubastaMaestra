<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAChPpDxoDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7
        j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7
        j/+jRJT3pEaUX6A7j//x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/2tjS/8au
        uf+pU5v/6+Ll//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/c2dP/z8zE/8/MxP/PzMT/z8zE/8/M
        xP/PzMT/z8zE/8auuf+jQ5L5oDuP//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv
        7P/a2NL/wqO1/7Rspv/x7+z/7ujp/82ewv/Mm8H/y5vB/+jd4//l1d//zJvB/8CQtP+7ja3/zsrD/8Sr
        uP+5iaz/uYms/76Ysf/PzMT/z8zE/6A7j/+gO4//8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv
        7P/x7+z/8e/s/9rY0v/Co7X/tGym//Hv7P/hzNr/okuY/42Iv/+SV6D/063K/8ybwf+fYKX/goe//51C
        k//Kvb//rnCk/55vr/9/f7v/nkiW/8/MxP/PzMT/oDuP/6A7j//x7+z/8e/s/8WNuf/Ag7T/wIO0/8CD
        tP/Ag7T/wIO0/8CDtP/Sqsj/2tjS/8Kjtf+0bKb/8e/s/+HM2v+kXaP/dOL3/4J1tP/Trcr/zJvB/52M
        wP9e3fb/m0uY/8q9v/+ucKX/mqvT/1XN7f+eSJb/z8zE/8/MxP+gO4//oDuP//Hv7P/x7+z/17PN/9Gn
        x//Rp8f/0afH/9Gnx//Rp8f/0afH/9/I1//a2NL/wqO1/7Rspv/x7+z/5NLd/6A9kP+gRpX/nz+S/9az
        zf/OocT/oUCT/55Glf+gPZD/zMHA/7B1pf+hQpP/nUWV/6BNmP/PzMT/z8zE/6A7j/+gO4//8e/s//Hv
        7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s/9rY0v/Co7X/tGym//Hv7P/x7+z/6Nvh/+bX
        4P/m1+D/8e/s//Ds6v/m1+D/1MTK/8u+v//PzMT/zcbC/8i5vf/Iub3/zMHA/8/MxP/PzMT/oDuP/6A7
        j//x7+z/8e/s/+HL2v/cv9P/3L/T/9y/0//cv9P/3L/T/9y/0//n2OD/2tjS/8Kjtf+0bKb/8e/s/+TT
        3f+gPZD/oEaV/58/kv/Xs83/zqLE/6FAk/+eRpX/nz2R/8vCwP+wdab/oEKT/55Flf+hTpn/z8zE/8/M
        xP+gO4//oDuP//Hv7P/x7+z/uneu/7VrqP+1a6j/tWuo/7VrqP+1a6j/tWuo/8ubwP/a2NL/wqO1/7Rs
        pv/x7+z/4cza/6Rdo/904vf/gnW0/9Otyv/Mm8H/nYzA/17d9v+bS5j/yr2//65wpf+aq9P/Vc3t/55I
        lv/PzMT/z8zE/6A7j/+gO4//8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s/9rY
        0v/Co7X/tGym//Hv7P/hzNr/okuY/4yIv/+SV6D/063K/8ybwf+fYKX/goe//51Ck//Kvb//rnCk/55v
        r/9/f7v/nkiW/8/MxP/PzMT/oDuP/6A7j//x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv
        7P/x7+z/2tjS/8Kjtf+0bKb/8e/s/+7o6f/MnsL/zJvB/8ubwf/o3eP/5dTe/8ybwf/AkLT/u42t/87K
        w//Eq7j/uYms/7mJrP++mLH/z8zE/8/MxP+gO4//oDuP//Hv7P/x7+z/sWKj/6tTm/+rU5v/q1Ob/6tT
        m/+rU5v/q1Ob/8WNuf/a2NL/wqO1/7Rspv/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s/9zZ
        0//PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/6A7j/+gO4//8e/s//Hv7P/p3uT/5tfg/+bX
        4P/m1+D/5tfg/+bX4P/m1+D/7eXn/9rY0v/Co7X/oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7
        j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j//x7+z/8e/s//Hv
        7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/2tjS/8Kjtf+ZXqb/b6fj/3Cm4/93ldX/c57c/2+n
        4/9vp+P/b6fj/3Oe3P9qhsb/WYjE/1iJxP9YicT/WYjE/2V7u/9chMD/WInE/1iJxP+gO4//oDuP//Hv
        7P/x7+z/0KXF/8ybwf/Mm8H/zJvB/8ybwf/Mm8H/zJvB/9q80f/a2NL/wqS1/5tcpf9vp+P/iW+1/5tE
        jv+cQI7/dJva/2+n4/91m9r/nUKS/5lCiv9/XZz/WInE/1iJxP+HWJ//mUOL/5lAjv9bhsL/WIjD/588
        j/+gO4//8e/s//Hv7P/LnML/xY+6/8WPuv/Fj7r/xY+6/8WPuv/Fj7r/17fP/9rY0v/KvL7/oUWV/4Z1
        vP+YTpv/hl9u/5FDgP+Jbbb/g3zB/4lttv+YTpL/d1Fi/5RFjf91aq//dWqv/5hEkv9+YGT/mECJ/3pk
        q/+DXKX/nkuY7qA7j//x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/2tjS/8/M
        xP/Eq7j/snio/6NLlP+HX27/kkOB/6toov+vdKj/q2ii/6FSj/94UWH/m0CM9p9Xn8WfV5/FoECQ9n9g
        Zf+ZPoj9oFOczKBLmJyhOY4boDuP//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s/+DJ2f/u6On/8e/s//Hv
        7P/a2NL/z8zE/8/MxP/PzMT/uoys/6A8j/+fRo7/zMHA/8/MxP/NxMH/pEuT/6A8j/6WQYR+AAAAAAAA
        AACeP4yOoDuP/509iuWqK4AGAAAAAAAAAACgO4//8e/s//Hv7P/x7+z/8e/s/+XV3/+xcq7/oDuP/6BK
        mP/Srcr/8e7s/9rY0v/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/An7T/qVGZygAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKA7j//x7+z/8e/s/+zk5v+/ibn/oUeX/6KN
        xf+cUp//g3rA/5dSoP+mXqT/z7jE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8Cf
        tP+pUZnKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDuP//Hv7P/w7ev/pE6b/6F2
        tf+lxOn/pdHy/5xUof94ktL/b6bi/4J9w/+dRZf/wqO1/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/M
        xP/PzMT/wJ+0/6lRmcoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgO4//8e/s/+/r
        6v+gPpH/pdHy/6XR8v+l0fL/nFSh/3iS0v9vp+P/b6fj/4xosf+8ka7/z8zE/8/MxP/PzMT/z8zE/8/M
        xP/PzMT/z8zE/8/MxP/An7T/qVGZygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKA7
        j//x7+z/7+vq/6A+kf+l0fL/pdHy/6XP8P+cUJ7/fI3O/2+n4/9vp+P/jGix/7yRrv/PzMT/sGug/6A7
        j/+gO4//oDuP/6A7j/+sXpz/z8zE/8CftP+pUZnKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAoDuP//Hv7P/v6+r/oD6R/6XR8v+kqdj/nlOf/5dSn/+bQpX/h3O7/3Gj4P+MaLH/vJGu/8/M
        xP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/wJ+0/6lRmcoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACgO4//8e/s/+/r6v+gPJD/oGit/5xMm/9+hsn/aJ7a/2F/vf+KV6L/mkiZ/5ZR
        n/+8ka7/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/An7T/qVGZygAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKA7j//x7+z/8O3r/6NGlv+aTZ3/cp/d/2+n4/9ontr/WInE/1iJ
        xP9+YKj/oDuP/8Cds//PzMT/sGug/6A7j/+gO4//oDuP/6A7j/+sXpz/z8zE/8CftP+pUZnKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDuP//Hv7P/x7+z/6Nzi/7l6sf+gSZj/gn/E/2md
        2v9ifr3/ilei/6BNmv/GpLz/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/wJ+0/6lR
        mcoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgO4//8e/s//Hv7P/x7+z/8e/s/97G
        1/+qXKL/mk+c/59Elf/Im8D/7+rp/9rY0v/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/M
        xP/An7T/qVGZygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKA7j//x7+z/8e/s//Hv
        7P/x7+z/8e/s//Dt6//avdH/6t/k//Hv7P/x7+z/2tjS/8/MxP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/M
        xP/PzMT/z8zE/8CftP+pUZnKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDuP//Hv
        7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/a2NL/z8zE/8/MxP/PzMT/z8zE/8/M
        xP/PzMT/z8zE/8/MxP/PzMT/wJ+0/6lRmcoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACgO4//8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s//Hv7P/x7+z/8e/s/9rY0v/PzMT/z8zE/8/M
        xP/PzMT/z8zE/8/MxP/PzMT/z8zE/8/MxP/An7T/qVGZygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKE+kPKgO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7
        j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+gO4//oDuP/6A7j/+mSpavAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDAAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAA
        Af8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf97InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>