<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        af90Fmn/dBZp/3QWaf90Fmn/dBZp/3QWaf90Fmn/dBZp/3QWaf90Fmn/dBZp/3QWaf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMWaEeLNHLc/8mb//7Imv/oq5P/9LqX///J
        m///yZv//8mb//S6l//orJL//sia///Jm///yZv//cea/+apkv/3vpj//8mb///Jm/90Fmn/dBZp/wAA
        AAAAAAAAcxZqanQVaXd0FWl3dBVpd3QVaXd0FWl3dBVpd3MVaUkAAAAAdRZqRoozct3/yZv/rmB95HUZ
        auJ3Gmry8LaW///Jm//wtZb/dxpp8nYZauOwYn7k/8mb///Jm/+dTHjidhlq3Xoea/D6wpn//seb/3QW
        af50Fmn/AAAAAAAAAAB0Fml1dBdpiHQXaYh0F2mIdBdpiHQXaYh0F2mIdBdrTwAAAAB2Em0cdxhq8bdr
        guKCKW7ldRZoU3UWaMavY37vwnuE669jfu90FmnFdRZoU4MpbubCe4TrwnuE63wfa+tyF2k4dhhq47ht
        ge2iUXrgdhlqz3QWaf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB1Fmg7dBdqk3QWad5zFWpUdBZqxnQWaLB1FmmZdBZosHQWacVzFWpUdBZp3nUWaZl1FmmZdRZq6HQW
        Zzl0FmnhdBZppXMXaodxE2gbdBZp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMUaTOAGmYKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAdBVobnQWaf10FmjjeRtrEwAAAABtEm0OdBZp3nQWaf1zF2lmAAAAAAAA
        AABzF2qHdBZp/3QWadWAK1UGAAAAAAAAAAB0Fmn/AAAAAAAAAAAAAAAAAAAAAHUVZyV0GGqrdBZp/3YY
        aud1FmpeAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzFmlQdRZprwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQWaf8AAAAAAAAAAHcRZg91FmqMdhpq77pw
        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
        dCI6IiJ9
</value>
  </data>
</root>