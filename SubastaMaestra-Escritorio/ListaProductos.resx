<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhRyIlIUbiP+FG4j/hRuI/4UbiP+FG4j/hRuI/4Ub
        iP+HHIckAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFHIiUhRuI/4UbiP+FG4j/hRuIx4Ya
        iWGFHIhthRuI84cchyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIUciJSFG4j/hRuI/4Ub
        iMmFHId3hRuI84UbiOWGGoljhR+FGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiCKID4QaiOeFG4juhRuI7oUch2YAAAAAhRyIlIUb
        iP+FG4j/hhuIZ4YbiOmFHIhchRuJeYUbiOyGGYo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEHIQbhRuI9ocehyKHHociqgCqAwAA
        AACFHIiUhRuI/4UbiP+GG4i7hhyIeIUbiO+EG4jOhRyIbYUbiPCEGohPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQchBuFG4j1AAAAAAAA
        AAAAAAAAAAAAAIUciJSFG4j/hRuI/4UbiP+FG4j/hRuI/4UbiP+FG4jchhyJUoUch8IAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhByEG4Ub
        iPUAAAAAAAAAAAAAAAAAAAAAhRyIlIUbiP+FG4j/hRuI/4UbiP+FG4j/hRuI/4UbiP+HHIckAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACEHIQbhRuI9QAAAAAAAAAAAAAAAAAAAACAGowUhx6HIocehyKHHocihx6HIocehyKHHocihx6HIpkz
        mQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIQchBuFG4j1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP8BhBqHV4Yah5GGGYo9hRuImIAajBQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhByEG4UbiPUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhxqHMYUaiMGFG4j/hRqIroMch0CFG4j/hRuI74Uc
        h3eSJJIHAAAAAAAAAAAAAAAAAAAAAAAAAACEHIQbhRuI9QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhhuGE4Yah5GFG4j8hRuI/4UbiP+FGoiugxyHQIUb
        iP+FG4j/hRuI/4UbiNmGG4pMAAAAAAAAAAAAAAAAAAAAAIQchBuFG4j1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFG4jwhRuI/4UbiP+FG4j/hRuI/4Ua
        iK6DHIdAhRuI/4UbiP+FG4j/hRuI/4UbiP+GGolhAAAAAAAAAAAAAAAAhByEG4UbiPUAAAAAAAAAAAAA
        AAAAAAAAhBqHWYUbiZmFG4mZhRuJmYUbiZmFG4mZhRuJmYUbiZmAF4sWAAAAAIUbiP+FG4j/hRuI/4Ub
        iP+FG4j/hRqIroMch0CFG4j/hRuI/4UbiP+FG4j/hRuI/4QbiXAAAAAAAAAAAAAAAACEHIQbhRuI9QAA
        AAAAAAAAAAAAAAAAAACFHIiUhRuI/4UbiP+FG4j/hRuI+IQaiIeFGoi4hRuI/4cchyQAAAAAhRuI/4Ub
        iP+FG4j/hRuI/4UbiP+FGoiugxyHQIUbiP+FG4j/hRuI/4UbiP+FG4j/hBuJcAAAAAAAAAAAAAAAAIQc
        hBuFG4j1AAAAAAAAAAAAAAAAAAAAAIUciJSFG4j/hRuI/4UbiPiEG4dohRuI2oUbiJiEGoiahxyHJAAA
        AACFG4j/hRuI/4UbiP+FG4j/hRuI/oUch4CDGoknhhuI6YUbiP+FG4j/hRuI/4UbiP+EG4lwAAAAAAAA
        AACEGolqhRuHlYUbiPqFGomIhRqJiIcdhzUAAAAAhRyIlIUbiP+FG4j/hhqIdoUbiNyGGoeRhRyIzIUb
        iKyLF4sLAAAAAIUbiP+FG4j/hRuI/4UbiMqEGog6hhuGJoQah1mHHocRhRuJjIUbiPmFG4j/hRuI/4Qb
        iXAAAAAAAAAAAIQaiWqFG4eVhRuI+oUaiYiFGomIhByJNgAAAACFHIiUhRuI/4UbiP+GHIh4hhuIZ4Ua
        iK6FG4l7hhuIu4UbiL6IIogPhRuI/4UbiOaFG4dggCCPEIQciIuFG4j5hRuI/4UbiMqEGog6hhuGJoQb
        h7OFG4j/hBuJcAAAAAAAAAAAAAAAAIQchBuFG4j1AAAAAAAAAAAAAAAAAAAAAIUciJSFG4j/hRuI/4Ub
        iP+FG4j4hRuI/4UbiP+EHIiLhhuJqIUbiMiFGomIiCKID4YciGWGG4jphRuI/4UbiP+FG4j/hRuI/4Ub
        iP6GGoekiRuJHIUdiEeGGolOAAAAAAAAAAAAAAAAhByEG4UbiPUAAAAAAAAAAAAAAAAAAAAAhRyIlIUb
        iP+FG4j/hRuI/4UbiP+FG4j/hRuI/4UbiP+DHIolhhqGO4cYhyCEG4jOhRuI/4UbiP+FG4j/hRuI/4Ub
        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
        dCI6IiJ9
</value>
  </data>
</root>