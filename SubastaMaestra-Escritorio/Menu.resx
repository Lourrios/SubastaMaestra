<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAiBQADlWAOVv9hDVj5DAEK3QIA
        AosAAACZAAAAmQAAAJkAAACZAAAAmQAAAG0AAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAAAgAAAAAAAAAAAAAAAALCwNfDAwC8yEfBu4PDgT3RQo+/xIL
        CvrKwiqxWFUS1iEfBu4hHwbuIR8G7iEfBu4hHwbuIR8G7iEfBu4hHwbuIR8G7iEfBu4hHwbuIR8G7iEf
        Bu4hHwbuIR8G7iEfBu4hHwbuIR8G7iEgBu8nJAP3Dw4B+Q8MA1UAAAAAAAAAAAsLAu/Oxiv/5d0w/4N+
        HP8CAQH/mZMh/+XdMP/l3TD/5d0w/+XdMP+alSD/iYUd/4mFHf/Pxyv/5d0w/+XdMP/Kwyr/iYUd/4mF
        Hf+fmSH/5d0w/+XdMP/l3TD/npkh/4mFHf+JhR3/y8Qr/+PYJf++qwL/FBMC8QAAAAAAAAAACQgC9d7W
        Lv/l3TD/49sw/8S9Kf/l3TD/5d0w/+XdMP/l3TD/5d0w/3p2Gv9rZxb/a2cW/7+5KP/l3TD/5d0w/7qz
        J/9rZxb/a2cW/4B8G//l3TD/5d0w/+XdMP9/ehv/a2cW/2tnFv+7tCf/5Nkn/9C7Av8PDgH3AAAAAAAA
        AAAREAOUJiUJ8FRREvFUURLxVFES8VRREvFUURLxVFES8VRREvFUURLxVFES8VRREvFUURLxVFES8VRR
        EvFUURLxVFES8VRREvFUURLxVFES8VRREvFUURLxVFES8VRREvFUURLxVFES8VRREfJWUAj5KSYC+xsZ
        BI0AAAAAAAAAAAAAAAAAAAA6AAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAA
        AFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAA
        AFUAAAA1AAAAAAAAAAAAAAAA//wAAP/4AAD/+AAA//gAAP/4AAD/+AAA//gAAP/4AAD/+AAA//gAAP/4
        AAD/+AAA8AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAf//4AH//+AB///gAf//4AH//+AB
        //+AAAAHAAAAAwAAAAMAAAADAAAAA4AAAAd7InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>